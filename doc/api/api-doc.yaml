openapi: 3.0.0
info:
  title: API de Ejemplo
  description: API para gestionar usuarios y productos
  version: 1.0.0
  contact:
    name: Soporte de API
    email: anxo-vilar@tecdesoft.com
servers:
  - url: /v1
    description: Api de pruebas - version 1
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: number
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
security:
  - BearerAuth: []
tags:
  - name: Usuarios
    description: Operaciones relacionadas con la gestión de usuarios
  - name: Productos
    description: Operaciones relacionadas con la gestión de productos
  - name: Auth
    description: Operaciones relacionadas con la autenticacion
paths:
  /products:
    get:
      summary: Obtener todos los productos
      tags:
        - Productos
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crear un nuevo producto
      tags:
        - Productos
      requestBody:
        description: Datos del nuevo producto
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Datos inválidos, el producto no es una fruta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar productos
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      requestBody:
        description: Datos actualizados del producto
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Algun producto no tiene datos válidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Eliminar un producto por ID
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "204":
          description: Producto eliminado
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{id}:
    get:
      summary: Obtener un producto por ID
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Usuarios
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crear un nuevo usuario
      tags:
        - Usuarios
      requestBody:
        description: Datos del nuevo usuario
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Datos inválidos, el usuario no es una fruta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar  usuarios
      tags:
        - Usuarios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      requestBody:
        description: Datos actualizados del usuario
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Algun usuario no tiene datos válidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Eliminar un usuario por ID
      tags:
        - Usuarios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Usuario eliminado
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Usuarios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /counters:
    get:
      summary: Obtener todos los contadores
      tags:
        - Contadores
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Lista de contadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Counter"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crear un nuevo contador
      tags:
        - Contadores
      requestBody:
        description: Datos del nuevo contador
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        "201":
          description: Contador creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Counter"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar un contador por ID
      tags:
        - Contadores
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Datos actualizados del contador
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        "200":
          description: Contador actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Counter"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Contador no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Eliminar un contador por ID
      tags:
        - Contadores
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Contador eliminado
        "404":
          description: Contador no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /counters/{id}:
    get:
      summary: Obtener un contador por ID
      tags:
        - Contadores
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "200":
          description: Contador encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Counter"
        "404":
          description: Contador no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/:id:
    delete:
      summary: Eliminar un producto por ID
      tags:
        - Productos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "204":
          description: Producto eliminado
        "400":
          description: El producto no existe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/:id:
    delete:
      summary: Eliminar un usuario por ID
      tags:
        - Usuarios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: number
      responses:
        "204":
          description: Usuario eliminado
        "400":
          description: El usuario no existe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
